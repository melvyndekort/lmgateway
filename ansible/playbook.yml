---
- name: "Configuring EC2 instance"
  hosts: localhost
  connection: local
  vars_files:
    - secrets.yml
  tasks:
    - name: Gather EC2 metadata facts
      amazon.aws.ec2_metadata_facts:

    - name: Set root password
      ansible.builtin.user:
        name: root
        password: '{{ linux_password }}'

    - name: Create user melvyn
      ansible.builtin.user:
        name: melvyn
        append: true
        groups: ['wheel']
        password: '{{ linux_password }}'
        shell: '/bin/bash'

    - name: Create .ssh directory for melvyn
      ansible.builtin.file:
        path: /home/melvyn/.ssh
        state: directory
        mode: '0700'
        owner: melvyn:melvyn

    - name: Create authorized_keys for melvyn
      ansible.builtin.copy:
        dest: /home/melvyn/.ssh/authorized_keys
        mode: '0664'
        owner: melvyn:melvyn
        content: '{{ authorized_keys }}'

    - name: 
      ansible.builtin.copy:
        dest: /home/melvyn/.ssh/config
        mode: '0600'
        owner: melvyn:melvyn
        content: '{{ ssh_config }}'

    - name: 
      ansible.builtin.copy:
        dest: /etc/systemd/network/wg0.netdev
        mode: '0640'
        owner: root:systemd-network
        content: '{{ wireguard_netdev }}'

    - name: 
      ansible.builtin.copy:
        dest: /etc/systemd/network/wg0.network
        mode: '0640'
        owner: root:systemd-network
        content: '{{ wireguard_network }}'

    - name: 
      ansible.builtin.copy:
        dest: /etc/dnsmasq.d/wireguard.conf
        mode: '0664'
        content: '{{ dnsmasq_conf }}'



    - name: Check instance type
      ansible.builtin.debug:
        msg: "This instance is a t1.micro"
      when: ansible_ec2_instance_type == "t1.micro"

    - name: Retrieve secrets from SSM Parameter Store
      ansible.builtin.set_fact:
        cloudflare_token: "{{ lookup('amazon.aws.aws_ssm', '$SSM_CLOUDFLARE_TOKEN') }}"
        newrelic_key: "{{ lookup('amazon.aws.aws_ssm', '$SSM_NEWRELIC_KEY') }}"
        cacheable: false
      environment:
        SSM_CLOUDFLARE_TOKEN: "{{ lookup('ansible.builtin.env', 'SSM_CLOUDFLARE_TOKEN') }}"
        SSM_NEWRELIC_KEY: "{{ lookup('ansible.builtin.env', 'SSM_NEWRELIC_KEY') }}"
