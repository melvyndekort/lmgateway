name: "Pipeline"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/pipeline.yml'
      - 'ami_refresher/**'
  pull_request:
    branches:
      - main

permissions:
  id-token: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Build
        if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
        uses: docker/build-push-action@v5
        with:
          context: ami_refresher
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        uses: docker/build-push-action@v5
        with:
          context: ami_refresher
          push: true
          tags: melvyndekort/ami-refresher:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  trigger-run:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::075673041815:role/external/deployer
      - name: Output Run Attempt
        run: echo ${{ github.run_attempt }}
      - name: Send SQS message
        run: >-
          aws sqs send-message
          --queue-url 'https://sqs.eu-west-1.amazonaws.com/075673041815/ami-updates-queue'
          --message-body 'GitHub Actions Run Attempt: ${{ github.run_attempt }}'
          --delay-seconds 0
